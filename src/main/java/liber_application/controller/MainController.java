package liber_application.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import liber_application.data.BookLoanRepository;
import liber_application.data.BookRepository;
import liber_application.data.GenreRepository;
import liber_application.data.LocationRepository;
import liber_application.data.UserRepository;
import liber_application.model.User;

/**
 * A demo controller, used for web start page
 * @author Ulf Bilting
 *
 */
@Controller    // This means that this class is a Controller
@RequestMapping(path="/") // This means URL's start with /demo (after Application path)
public class MainController {
	@Autowired // This means to get the bean called userRepository
	           // Which is auto-generated by Spring, we will use it to handle the data
	private UserRepository userRepository;
	
	@Autowired
	private BookLoanRepository loansRepo;
	
	@Autowired
	private BookRepository booksRepo;
	
	@Autowired
	private GenreRepository genreRepo;
	
	@Autowired
	private LocationRepository locationRepo;
	
	@GetMapping(path="/add") // Map ONLY GET Requests
	public @ResponseBody String addNewUser (@RequestParam String name
			, @RequestParam String email) {
		// @ResponseBody means the returned String is the response, not a view name
		// @RequestParam means it is a parameter from the GET or POST request
		
		User n = new User();
		n.setName(name);
		n.setEmail(email);
		userRepository.save(n);
		return "Saved";
	}
	
	@GetMapping(path="/all")
	public @ResponseBody Iterable<User> getAllUsers() {
		// This returns a JSON or XML with the users
		return userRepository.findAll();
	}
	
	//Webapplication:
	
	@GetMapping("")
	public String startPage(Model m) {
		m.addAttribute("loans", loansRepo.findAll());
		m.addAttribute("users", userRepository.findAll());
		m.addAttribute("books", booksRepo.findAll());
		m.addAttribute("genres", genreRepo.findAll());
		m.addAttribute("locations", locationRepo.findAll());
		
		m.addAttribute("isStartPage", true);
		
		
		return "startpage";
	}
}
